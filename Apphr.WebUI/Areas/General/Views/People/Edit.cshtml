@model Apphr.Application.Personas.DTOs.PersonaDTOEdit
@using Apphr.Application.Personas.DTOs
@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
    var _genderList = (IEnumerable<SelectListItem>)ViewData["GenderList"];
    var _estadoCivilList = (IEnumerable<SelectListItem>)ViewData["EstadoCivilList"];
    var _religionList = (IEnumerable<SelectListItem>)ViewData["ReligionList"];
    var _etniaList = (IEnumerable<SelectListItem>)ViewData["EtniaList"];
}
<!-- VisTimeLine -->
<link href="~/Content/vis-7.5.1/vis-timeline-graph2d.min.css" rel="stylesheet" />
<!-- filepond -->
<link href="~/Content/filepond/dist/filepond.min.css" rel="stylesheet" />
<link href="~/Content/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css" rel="stylesheet" />

<div class="container-lg">
    <!--BreadCrum-->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Index","Home", new { Area = "" })" style="text-decoration:none">
                    <i class="fa fa-home" title="Inicio"></i>
                    <span>Inicio</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Index")" style="text-decoration:none">
                    <span>Índice</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Details", new { id = Model.PersonId})" style="text-decoration:none">
                    <span>Ver</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <span>Editar</span>
            </li>
        </ol>
    </nav>
    <!--BreadCrum-->
    <!-- Form Title -->
    <h4>
        @ViewBag.Title Persona
        <a class="btn btn-success float-end" href="@Url.Action("Create", new { id = Model.PersonId })">
            Adicionar <i class="fa fa-pen-square"></i>
        </a>
    </h4>
    <hr />
    <!-- Form Title -->
    <!--Formulario -->
    @using (Html.BeginForm("Edit", "People", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(x => x.PersonId)
            @Html.HiddenFor(x => x.Image)
            @Html.HiddenFor(x => x.ImageDate)
            <div class="row">
                <div class="col-lg-8">

                    @Html.EditorFor(x => x.IsActive)

                    <div class="row">
                        <div class="input-group mb-3">
                            <span class="input-group-text" id="name-addon"
                                  data-aos="slide-left"
                                  data-aos-easing="ease-out-cubic"
                                  data-aos-anchor-placement="top-bottom">
                                <label class="mb-0" for="Gender">Género</label>
                                <i class="ms-1 fa fa-venus-mars"></i>
                            </span>
                            @Html.DropDownListFor(x => x.Gender, _genderList, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })</div>
                        <div class="col-md-4">@Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })</div>
                        <div class="col-md-4">@Html.EditorFor(model => model.ThirdName, new { htmlAttributes = new { @class = "form-control" } })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })</div>
                        <div class="col-md-4">@Html.EditorFor(model => model.MatriName, new { htmlAttributes = new { @class = "form-control" } })</div>
                        <div class="col-md-4">@Html.EditorFor(model => model.MarriedName, new { htmlAttributes = new { @class = "form-control" } })</div>
                    </div>
                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-md-4"></div>
                        <div class="col-md-4"></div>
                    </div>
                    <div class="row">
                        @Html.EditorFor(x => x.Birth, new { prependIcon = "calendar" })
                    </div>
                    <div class="row">
                        @Html.EditorFor(x => x.EstadoCivil, new { optionsList = _estadoCivilList })
                    </div>
                    <div class="row">
                        @Html.EditorFor(x => x.Regligion, new { optionsList = _religionList })
                    </div>
                    <div class="row">
                        @Html.EditorFor(x => x.Etnia, new { optionsList = _etniaList })
                    </div>
                </div>

                <div class="col-lg-4">
                    <div class="card border-secondary mb-3">
                        <div class="card-header bg-secondary text-light">
                            Foto <i class="fa fa-image"></i>
                        </div>
                        <div class="card-body">
                            <figure class="text-center">
                                <img src="@Url.Action("Image", new { id = Model.PersonId })" class="form-control mw-100" data-aos="@(ViewData["aos"] != null ? ViewData["aos"] : "flip-left")" data-aos-easing="ease-out-back" data-aos-delay="300" />
                                <figcaption class="text-muted small" title="2022-05-01">
                                    @*@Model.ImageDate?.ToLongDateString()*@
                                    @(((DateTime?)(Model.ImageDate)).HasValue ? Model.ImageDate.Value.ToLongDateString() : "Sin Imagen")
                                </figcaption>
                            </figure>
                            <input type="file" accept="image/*" class="my-pond" name="ImageFile" id="ImageFile" />

                        </div>
                    </div>
                </div>
            </div>


            <!-- Botones formulario -->
            <div class="col-md-12 mb-3">
                <button type="submit" class="btn btn-warning"><i class="fas fa-edit"></i> Actualizar</button>
                <a class="btn btn-outline-dark" href="@Url.Action("Details",new { id = Model.PersonId })"><i class="fas fa-chevron-left"></i>&nbsp;Regresar</a>
                <div class="float-end">
                    <a class="btn btn-outline-danger" href="@Url.Action("Delete", new { id = Model.PersonId})"><i class="fas fa-trash"></i>Eliminar</a>
                </div>
            </div>
            <!-- Botones formulario -->
        </div>
    }
    <!--Formulario -->
    <div class="row">
        <div class="col-md-6">
           
                <div class="card border-secondary mb-3">
                    <div class="card-header bg-secondary text-light">
                        Nombre de Usuario <i class="fas fa-user"></i>
                    </div>
                    <div class="card-body">
                        @if (Model.Usuario != null)
                        {
                            <strong>@Apphr.Resources.Strings.Email</strong><br />
                            @Html.DisplayFor(x => x.Usuario.UserName)
                        }
                        else
                        {
                            @Html.Partial("_CrearUsuario",new PersonaDTOCreateUser { PersonaId = Model.PersonId })
                        }
                    </div>
                </div>            
        </div>
    </div>

</div>
<div class="container-lg mt-2">
    <div id="visualization"></div>
</div>


@section scripts
{
    <!-- VisTimeLine -->
    <script src="~/Content/vis-7.5.1/vis-timeline-graph2d.min.js"></script>
    <!-- include FilePond library -->
    <script src="~/Content/filepond/dist/filepond.min.js"></script>
    <script src="~/Content/filepond-plugin-image-exif-orientation/dist/filepond-plugin-image-exif-orientation.min.js"></script>
    <script src="~/Content/filepond-plugin-image-resize/dist/filepond-plugin-image-resize.min.js"></script>
    <script src="~/Content/filepond-plugin-image-crop/dist/filepond-plugin-image-crop.min.js"></script>
    <script src="~/Content/filepond-plugin-image-transform/dist/filepond-plugin-image-transform.min.js"></script>
    <script src="~/Content/filepond-plugin-file-encode/dist/filepond-plugin-file-encode.min.js"></script>
    <script src="~/Content/filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.js"></script>
    <script src="~/Content/jquery-filepond/filepond.jquery.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetEventsList")/@Model.PersonId",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: ChartVis,
                error: OnError
            });
            function ChartVis(response) {

                if (response.Datos == "Error") { alert("Imposible mostrar el hisotiral"); }
                // DOM element where the Timeline will be attached
                var container = document.getElementById('visualization');

                // Create a DataSet (allows two way data-binding)
                var items = new vis.DataSet(response);

                var groups = ([
                    {
                        id: 1,
                        content: 'Mantenimineto de Datos'
                        // Optional: a field 'className', 'style', 'order', [properties]
                    }
                    // more groups...
                ]);

                // Configuration for the Timeline
                var options = {};

                // Create a Timeline
                var timeline = new vis.Timeline(container, items, groups, options);
            }
            function OnError(response) {
                alert("Error !");
            }
        });
    </script>
}