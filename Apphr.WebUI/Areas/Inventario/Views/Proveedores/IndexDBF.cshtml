@using PagedList.Mvc
@model Apphr.Application.Proveedores.DTOs.ProveedorDTOIndexDBF
@{
    ViewBag.Title = "Índice";
    ViewBag.Entidad = "Proveedores SIAHR";
    ViewBag.Icon = "<i class=\"far fa-list-alt\"></i>";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" />

@Html.Partial("_PartialAdvSiahr")
<div class="container-lg">
    <!--BreadCrum-->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Index","Home", new { Area = "Inventario" })" style="text-decoration:none">
                    <i class="fa fa-home" title="Inicio"></i>
                    <span>Inicio</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <span>Índice</span>
            </li>
        </ol>
    </nav>
    <!--BreadCrum-->
    <!-- Encablezado -->
    <h4 class="my-3">
        @ViewBag.Title @ViewBag.Entidad (@ViewBag.Anio) @Html.Raw(ViewBag.Icon)
        @*<a class="btn btn-success ms-3 float-end" href="@Url.Action("Create")">
            Adicionar <i class="fa fa-plus"></i>
        </a>
        <a class="btn btn-default float-end" href="@Url.Action("Index")">
            SIAHR <i class="fas fa-link"></i>
        </a>*@
    </h4>
    <div class="clearfix"></div>
    <!-- Encablezado -->
    <!-- Filtro -->
    @using (Html.BeginForm("IndexDBF", "Proveedores", FormMethod.Get))
    {
        @Html.HiddenFor(x => x.F._Buscar)
        <div class="card border-dark mb-3">
            <div class="card-header background-siahr">
                <a class="text-decoration-none" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
                    Filtro <i class="fa fa-filter"></i>
                </a>
            </div>
            @*<div id="collapse1" class="panel-collapse collapse">*@
            <div class="collapse show" id="collapseExample">
                <div class="card-body">
                    @Html.EditorFor(x => x.F.Buscar, "StringP", new { placeholder = "Código, Descripción" })
                    <div class="form-group">
                        <div class="float-end mb-3">
                            <button type="submit" class="btn btn-info"><i class="fa fa-filter"></i> Aplicar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- Filtro -->
    <!-- Paged Result -->
    <div class="table-responsive">
        <table class="table table-hover table-bordered">
            <tr class="table-dark">
                <th style="width:65px;">Acción</th>
                <th>Nit</th>
                <th>Decripción</th>
                <th>Contacto</th>
            </tr>

            @if (Model.Result.Any())
            {
                foreach (var item in Model.Result)
                {
                    <tr>
                        <td class="text-center">
                            @*<a href="@Url.Action("DetailsDBF",new { Area = "Inventario", id = item.NIT })"><i class="far fa-eye"></i></a>*@
                            <div class="dropdown d-inline-block">
                                <button class="btn btn-primary btn-sm" type="button" id="ddBtn" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="ddBtn">
                                    <li><a class="dropdown-item" href="@Url.Action("DetailsDBF",new { Area = "Inventario", id = item.NIT })"><i class="far fa-eye"></i> Ver</a></li>
                                    <li><a class="dropdown-item" data-id="@item.NIT" onclick="ImportProveedor(this);"><i class="fas fa-sync"></i> Importar</a></li>
                                </ul>
                            </div>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.NIT)</td>
                        <td>@Html.DisplayFor(modelItem => item.DESCRI)</td>
                        <td>@Html.DisplayFor(modelItem => item.CONTAC)</td>
                    </tr>
                }
            }
        </table>
        </div>
        <!-- Table Paged Navigation-->
        <div class="row">
            <div class="col-12 text-center">@Html.PagedListPager(Model.Result, page => Url.Action("IndexDBF", new { page }) + "&F.Buscar=" + Model?.F?.Buscar + "&F._Buscar=" + Model?.F?._Buscar, PagedListRenderOptions.OnlyShowFivePagesAtATime)</div>
            <div class="text-center">Página @(Model.Result.PageCount < Model.Result.PageNumber ? 0 : Model.Result.PageNumber) de @Model.Result.PageCount</div>
        </div>
        <!-- Table Paged Navigation-->
        <!-- Paged Result -->
        @*<div class="row">
                <div class="col">
                    <button role="button" class="btn btn-primary">Sincronizar Proveedores <i class="fas fa-sync"></i></button>
                    @Ajax.ActionLink("Sincronizar Proveedores", "SyncDBF", null, new AjaxOptions { HttpMethod = "GET", OnSuccess = "SyncSucces", UpdateTargetId = "SyncEstatus" }, new { @class = "btn btn-primary" })
                    <div id="SyncEstatus">0</div>
                </div>
            </div>*@
    </div>

    @section Scripts{
        <script>
        function ImportProveedor(t) {
            var id = $(t).data("id");
            $.ajax({
                type: "GET",
                url: '@Url.Action("JsImportProveedor", "Proveedores", new { Area = "Inventario" })',
                data: { NIT: id },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.result) {
                        toastr.success('Sincronizado satisfactoriamente','Sincronizacion');
                    }
                },
                failure: function (response) {
                    jshelper.failure();
                   // console.log(response);
                }
            });
        }
        </script>
    }
