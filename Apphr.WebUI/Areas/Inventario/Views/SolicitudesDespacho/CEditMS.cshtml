@model Apphr.Application.SolicitudesDespachos.DTOs.SolicitudDespachoDTOCEditMS
@using Newtonsoft.Json
@{
    ViewBag.Title = "Crear";
    ViewBag.Entidad = "Solicitud Despacho Materiales de Sala";
    ViewBag.Icon = "<i class=\"far fa-plus-square\"></i>";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}
<div class="container-lg">
    <!--BreadCrum-->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Index","Home", new { Area = "Inventario" })" style="text-decoration:none">
                    <i class="fa fa-home" title="Inicio"></i>
                    <span>Inicio</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <a class="" href="@Url.Action("Index")" style="text-decoration:none">
                    <span>Índice</span>
                </a>
            </li>
            <li class="breadcrumb-item" data-aos="fade-left">
                <span>Crear</span>
            </li>
        </ol>
    </nav>
    <!--BreadCrum-->
    <!-- Form Title -->
    <h4>
        @ViewBag.Title @ViewBag.Entidad @Html.Raw(ViewBag.Icon)
        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-outline-dark float-end" })
    </h4>
    <hr />
    <!-- Form Title -->
    <!-- Formulario -->
    @using (Ajax.BeginForm("JsSaveMasterMS", "SolicitudesDetalle", new AjaxOptions
    {
        HttpMethod = "POST",
        OnBegin = "master.saveBegin",
        OnSuccess = "master.saveSuccess",
        OnFailure = "master.saveFailure"
    }, new { id = "master-form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.SeccionId)
        @Html.HiddenFor(x => x.year)
        @Html.HiddenFor(x => x.DepartamentoId)

        <div class="card border border-dark mb-2">
            <div class="card-header background-inventory">
                Datos Generales
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">

                        @Html.LabelFor(x => x.SolicitudDespachoId, htmlAttributes: new { @class = "form-label", style = "font-weight:bold;" })
                        <div class="input-group onIns">
                            <span class="input-group-text" id="basic-addon1">@Model.year-</span>
                            @Html.TextBoxFor(x => x.serie, new { @class = "form-control" })
                        </div>
                        @Html.TextBoxFor(x => x.SolicitudDespachoId, new { @class = "form-control onUpd" })
                        @Html.ValidationMessageFor(x => x.serie, "", new { @class = "text-danger" })
                        @*@Html.EditorFor(x => x.SolicitudDespachoId)*@
                    </div>
                    <div class="col-md-4">@Html.EditorFor(x => x.Correlativo)</div>
                    <div class="col-md-4">@Html.EditorFor(x => x.DespachoInventarioId)</div>
                    <div class="col-md-6">@Html.EditorFor(x => x.Fecha)</div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "form-label", style = "font-weight:bold;" })
                        <div class="col">
                            @Html.DropDownListFor(model => model.Tipo, null, new { @class = "form-control form-select" })
                            @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">@Html.EditorFor(x => x.DepartamentoCodigo)</div>
                    <div class="col-md-8">@Html.EditorFor(x => x.DepartamentoNombre)</div>
                    <div class="col-md-4">@Html.EditorFor(x => x.SeccionCodigo)</div>
                    <div class="col-md-8">@Html.EditorFor(x => x.SeccionNombre)</div>
                    <div class="col-12">@Html.EditorFor(x => x.Observacion)</div>
                </div>
            </div>
            <div class="card-header border-top" style="background-color: #daeaf6;">
                <strong>Material Sala</strong>
            </div>
            <div class="card-body">
                @Html.HiddenFor(x => x.PacienteId)
                <div class="row">
                    <div class="col-md-3">@Html.EditorFor(x => x.HojaControlSala)</div>
                    @*<div class="col-md-4">@Html.EditorFor(x => x.Fecha)</div>*@
                    <div class="col-md-3">@Html.EditorFor(x => x.FechaOperacion)</div>
                    <div class="col-md-3">@Html.EditorFor(x => x.Servicio)</div>
                    <div class="col-md-3">@Html.EditorFor(x => x.Cama)</div>
                    <div class="col-md-4">@Html.EditorFor(x => x.PacienteRM)</div>
                    <div class="col-md-8">@Html.EditorFor(x => x.PacienteNombreCompleto)</div>
                    <div class="col-12">@Html.EditorFor(x => x.Cirujano)</div>
                    <div class="col-12">@Html.EditorFor(x => x.AuxiliarEnfermeriaInstrumentista)</div>
                    <div class="col-12">@Html.EditorFor(x => x.AuxiliarEnfermeriaCirculante)</div>

                </div>
            </div>
        </div>



        <!-- Botones Formulario -->
        <div class="col-12 mt-1">
            <div class="col-md-offset-2">
                <button type="button" id="btn-masterSave" class="btn btn-success">Guardar</button>
                @*<a class="btn btn-outline-dark btnReturn" href="">Regresar</a>*@
                <button type="button" class="btn btn-success ms-2 float-end onUpd" data-bs-toggle="modal" onclick="child.rowCreate();" data-bs-target="#child-modal"> Adicionar Material <i class="fa fa-plus"></i></button>
                <button type="button" class="btn btn-outline-dark ms-2 float-end onUpd" onclick="refreshGrid();"><i class="fas fa-sync"></i></button>
            </div>
        </div>
        <!-- Botones Formulario -->
    }
    <!-- Formulario -->
    <!-- Grid -->
    <div id="Grid1" class="table-responsive mt-2"></div>
    <!-- Grid -->
    <!-- Botones formulario -->
    <div class="col-md-12 mt-2 onUpd">
        <a class="btn btn-outline-dark btnReturn" href="">Regresar</a>
        <div class="float-end">
            <a class="btn btn-outline-danger btn-eliminar" href="#"><i class="fas fa-trash"></i>&nbsp;Eliminar</a>
        </div>
    </div>
    <!-- Botones formulario -->
</div>


<!-- modal child -->
@using (Ajax.BeginForm("JsSaveChild", "SolicitudesDespacho", new AjaxOptions
{
    HttpMethod = "POST",
    OnBegin = "child.saveBegin",
    OnSuccess = "child.saveSuccess",
    OnFailure = "child.saveFailure"
},
new { id = "child-form" }))
{
    <div class="modal fade" id="child-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-bs-backdrop="static" data-bs-keyboard="false">    
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 id="myModalLabel" class="modal-title">Agregar Material</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="formLinea">
                    @Html.Partial("_CEditChild", Model.Child)
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-primary" data-bs-target="#exampleModalToggle2" data-bs-toggle="modal" data-bs-dismiss="modal">Open second modal</button>*@
                    <button type="button" class="btn btn-warning" data-bs-dismiss="modal">
                        Cerrar
                    </button>
                    <input type="submit" id="btnSaveChild" class="btn btn-primary" value="Guardar" />
                </div>
            </div>
        </div>
    </div>
}
<!-- modal child -->



@section Scripts {
    <script>
        let urls = @Html.Raw(JsonConvert.SerializeObject( new
              {
                  GetPaciente = Url.Action("JsGetPacienteByHCA", "Pacientes", new { Area = "Medica" }),
                  Details = @Url.Action("Details"),
                  Grid = @Url.Action("JsGrid"),
                  FindDestinos = @Url.Action("JsGetDestinosByFilter", "Destinos"),
                  GetDestinoName = @Url.Action("JsGetDestinoByCodigo", "Destinos"),
                  CEdit = @Url.Action("CEdit"),
                  Index = @Url.Action("Index"),
                  GetChild = @Url.Action("JsGetChild"),
                  DeleteMaster = @Url.Action("JsDeleteMaster"),
                  DeleteChild = @Url.Action("JsDeleteChild"),
                  FindMateriales = @Url.Action("JsGetMaterialesByFilter", "Materiales"),
                  GetMatByCod = @Url.Action("JsGetMaterialByCodigo", "Materiales")
              }));
        let id1 = '@Model.SolicitudDespachoId';
        
    </script>
    <script src="~/Content/apphr/SolicitudDespacho/CEditMS.js"></script>
}