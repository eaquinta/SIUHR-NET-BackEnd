@model DateTime?
@{
    var _attr = new Dictionary<string, object>();

    _attr.Add("class", "form-control");
    _attr.Add("type", "datetime");
    _attr.Add("readonly", "readonly");
    if (ViewData["min"] != null) { _attr.Add("min", ViewData["min"]); }
    if (ViewData["max"] != null) { _attr.Add("max", ViewData["max"]); }
}
<div class="mb-2">
    @if (ViewData["label"] != null)
    {
        @Html.LabelFor(x => x, (string)ViewData["label"], new { @class = "form-label", style = "font-weight:bold;" })
    }
    else
    {
        @Html.LabelFor(x => x, new { @class = "form-label", style = "font-weight:bold;" })
    }
    @if (ViewData["prependIcon"] != null)
    {
        <i class="ms-1 @ViewData["prependIcon"]"></i>
    }

    @*@Html.TextBox("", Model.HasValue ? Model.Value.ToString("dd-MM-yyyy HH:mm:ss") : null, _attr)*@
    <div class="form-control">
        @if (Model.HasValue)
        {

            @Model.Value.ToString("dd-MM-yyyy HH:mm:ss")
        }
    </div>
    @*@Html.ValidationMessageFor(x => x, null, new { @class = "text-danger" })*@
</div>